{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Session 3 further work"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# We always start with appropriate imports; note the use of the IPython magic\n",
    "# command to set up Matplotlib within the notebook\n",
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Grids\n",
    "\n",
    "### Question 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x110bed3c8>]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "N = 20\n",
    "x = np.logspace(-3,0,num=N)\n",
    "plt.plot(x,1/x,'bo')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x110c52d30>]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.semilogx(x,1/x,'bo')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x110e5d2e8>]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.loglog(x,1/x,'bo')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The linear axes show the form of the function clearly (visually intuitive) but the compression of points is confusing.  The semi-log plot shows the form of the function reasonably clearly, but the 1/x form is distorted.  The log-log plot shows the data points most clearly, and is clear if the axes are carefully checked."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1110d1630>]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define parameters for Archimedes spiral, r = a + b theta\n",
    "a = 0.0\n",
    "b = 1./2*np.pi\n",
    "theta = np.linspace(0,6*np.pi)\n",
    "r = a + b*theta\n",
    "x = r*np.cos(theta)\n",
    "y = r*np.sin(theta)\n",
    "plt.plot(x,y,'co-')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1110efc88>]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Parameters for logarithmic spiral\n",
    "a_log = 2\n",
    "b_log = 0.18\n",
    "r_log = a_log*np.exp(b_log*theta)\n",
    "x_log = r_log*np.cos(theta)\n",
    "y_log = r_log*np.sin(theta)\n",
    "plt.plot(x_log,y_log,'co-')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For these plots, we would benefit from the inverse of the usual logarithmic scale: we want fewer points near zero and more as theta increases."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.contour.QuadContourSet at 0x11110d160>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "N = 10\n",
    "avec = np.array((1,0))\n",
    "bvec = np.array((0.5,0.866))\n",
    "pos_nm = np.zeros((2,N,N))\n",
    "for i in range(N):\n",
    "    for j in range(N):\n",
    "        pos_nm[0,i,j] = i*avec[0] + j*bvec[0]\n",
    "        pos_nm[1,i,j] = i*avec[1] + j*bvec[1]\n",
    "surf = np.cos(pos_nm[0])*np.sin(pos_nm[1])\n",
    "plt.contourf(pos_nm[0],pos_nm[1],surf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x11126fa58>,\n",
       " <matplotlib.lines.Line2D at 0x11126fba8>,\n",
       " <matplotlib.lines.Line2D at 0x11126fcf8>,\n",
       " <matplotlib.lines.Line2D at 0x11126fe48>,\n",
       " <matplotlib.lines.Line2D at 0x11126ff98>,\n",
       " <matplotlib.lines.Line2D at 0x111277128>,\n",
       " <matplotlib.lines.Line2D at 0x111277278>,\n",
       " <matplotlib.lines.Line2D at 0x1112773c8>,\n",
       " <matplotlib.lines.Line2D at 0x111277518>,\n",
       " <matplotlib.lines.Line2D at 0x111277668>]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(pos_nm[0],pos_nm[1],'bo')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Differentiation\n",
    "\n",
    "### Question 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x111365048>]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dx = 2*np.pi/500\n",
    "x_roll = np.arange(0,2*np.pi,dx)\n",
    "cos_roll= np.cos(x_roll)\n",
    "sin_roll = np.sin(x_roll)\n",
    "fdc_roll = (np.roll(cos_roll,-1) - np.roll(cos_roll,1))/(2*dx)\n",
    "# we know that the differential of cos is -sin, so we add sin here to find the difference\n",
    "plt.semilogy(x_roll,abs(fdc_roll+sin_roll))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that if you choose a simple value of `dx` like 0.01 (as I did at first) then the differentials at the *ends* of the array are wrong because the array does not wrap quite perfectly with the period of the function.  The ends of arrays when doing this kind of finite difference need care..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def d2f_cent(f,x,dx):\n",
    "    \"\"\"Implements the centred finite difference second derivative\"\"\"\n",
    "    return (f(x + dx) - 2 * f(x) + f(x - dx)) / (dx * dx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fd_f(f,x,dx):\n",
    "    \"\"\"Implements forward finite difference\"\"\"\n",
    "    return (f(x + dx) - f(x)) / dx\n",
    "\n",
    "def fd_b(f,x,dx):\n",
    "    \"\"\"Implements backward finite difference\"\"\"\n",
    "    return (f(x) - f(x - dx)) / dx\n",
    "\n",
    "def fd_c(f,x,dx):\n",
    "    \"\"\"Implements centred finitd difference\"\"\"\n",
    "    return (f(x + dx) - f(x - dx))/(2*dx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exact second derivative is  -0.8414709848078965\n",
      "dx is  0.1  second, ff, fb, bb are  -0.8407699926874289 -0.8904649347747928 -0.840769992687429 -0.782674354754731\n",
      "dx is  0.010000000000000002  second, ff, fb, bb are  -0.8414639725740077 -0.846824787710254 -0.841463972574008 -0.8360190117384646\n",
      "dx is  0.0010000000000000002  second, ff, fb, bb are  -0.8414709148363283 -0.8420107960871446 -0.8414709148363284 -0.8409301917033927\n",
      "dx is  0.00010000000000000002  second, ff, fb, bb are  -0.8414709817827767 -0.8415250163373854 -0.8414709817827769 -0.8414169583303986\n",
      "dx is  1.0000000000000003e-05  second, ff, fb, bb are  -0.8414713370541445 -0.8414757779462432 -0.8414713370541447 -0.8414646757159969\n"
     ]
    }
   ],
   "source": [
    "x = 1.0\n",
    "exact = -np.sin(x)\n",
    "print(\"Exact second derivative is \",exact)\n",
    "for dx in [0.1**i for i in range(1,6)]:\n",
    "    second = d2f_cent(np.sin,x,dx)\n",
    "    fd_f_f = (fd_f(np.sin,x+dx,dx) - fd_f(np.sin,x,dx))/dx\n",
    "    fd_f_b = (fd_f(np.sin,x,dx) - fd_b(np.sin,x,dx))/dx\n",
    "    fd_b_b = (fd_b(np.sin,x,dx) - fd_b(np.sin,x-dx,dx))/dx\n",
    "    print(\"dx is \",dx,\" second, ff, fb, bb are \",second, fd_f_f, fd_f_b, fd_b_b)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Integration\n",
    "\n",
    "### Question 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def simpson_int(f,a,b,N):\n",
    "    \"\"\"Implement integration using Simpson's rule\n",
    "    Inputs:\n",
    "    f    (function to be integrated)\n",
    "    a, b (limits in integration)\n",
    "    N    (number of points, must be even)\n",
    "    Returns value of integral\"\"\"\n",
    "    # End points\n",
    "    integral= f(a) + f(b)\n",
    "    dx = (b-a)/N\n",
    "    for i in range(1,N,2): \n",
    "        integral += 4*f(a+i*dx)\n",
    "    for i in range(2,N-1,2):\n",
    "        integral += 2*f(a+i*dx)\n",
    "    integral *= dx/3.0\n",
    "    return integral"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Exact answer for integral of x cos(x) from 0 to 1 is  0.38177329067603627\n",
      "Integral of x cos(x) from 0 to 1 is  0.38178285423408026  with  6  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.38177452640225557  with  10  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.3817733678114146  with  20  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.3817732926500038  with  50  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.3817732907994031  with  100  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.3817732906837463  with  200  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.38177329067623395  with  500  points\n",
      "Integral of x cos(x) from 0 to 1 is  0.3817732906760493  with  1000  points\n"
     ]
    }
   ],
   "source": [
    "def xcos(x):\n",
    "    \"\"\"Calculate x*cos(x)\"\"\"\n",
    "    return x*np.cos(x)\n",
    "print(\"Exact answer for integral of x cos(x) from 0 to 1 is \",np.cos(1)+np.sin(1)-1)\n",
    "for i in [6,10,20,50,100,200,500,1000]:\n",
    "    print(\"Integral of x cos(x) from 0 to 1 is \",simpson_int(xcos,0,1,i),\" with \",i,\" points\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Clearly, Simpson's rule is far better than the others; as it requires the *same* number of function evaluations, it is worth using every time.\n",
    "\n",
    "### Question 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Scipy quad gives  0.3817732906760362  with estimated error  4.23853497495448e-15\n"
     ]
    }
   ],
   "source": [
    "from scipy import integrate\n",
    "int, err = integrate.quad(xcos,0,1)\n",
    "print(\"Scipy quad gives \",int,\" with estimated error \",err)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Scipy quad gives  0.3817732906760362  with estimated error  4.23853497495448e-15\n"
     ]
    }
   ],
   "source": [
    "def xcosa(x,a):\n",
    "    \"\"\"Calculate x*cos(a*x)\"\"\"\n",
    "    return x*np.cos(a*x)\n",
    "int, err = integrate.quad(xcosa,0,1,args=(1.0))\n",
    "print(\"Scipy quad gives \",int,\" with estimated error \",err)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
